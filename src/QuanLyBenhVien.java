import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

public class QuanLyBenhVien {
    private List<BenhAn> danhSachBenhAn;
    private Scanner scanner;
    private SimpleDateFormat dateFormat;
    private static final String CSV_FILE = "data/benhan.csv"; // File CSV ƒë·ªÉ l∆∞u d·ªØ li·ªáu

    public QuanLyBenhVien() {
        danhSachBenhAn = new ArrayList<>();
        scanner = new Scanner(System.in);
        dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        docDuLieuTuCSV();
        if (danhSachBenhAn.isEmpty()) {
            khoiTaoDuLieuMau();
        }
    }

    // T·∫†O M√É B·ªÜNH √ÅN ƒê·ªäNH D·∫†NG BA-XXX
    private String taoMaBenhAn() {
        int maxSo = 0;
        // T√¨m s·ªë l·ªõn nh·∫•t trong c√°c m√£ hi·ªán c√≥
        for (BenhAn ba : danhSachBenhAn) {
            String ma = ba.getMaBenhAn();
            if (ma.startsWith("BA-")) {
                try {
                    int so = Integer.parseInt(ma.substring(3));
                    if (so > maxSo) {
                        maxSo = so;
                    }
                } catch (NumberFormatException e) {
                    // B·ªè qua n·∫øu kh√¥ng parse ƒë∆∞·ª£c
                }
            }
        }
        // Tr·∫£ v·ªÅ m√£  BA-XXX
        return String.format("BA-%03d", maxSo + 1);
    }

    // ƒê·ªåC D·ªÆ LI·ªÜU T·ª™ CSV
    private void docDuLieuTuCSV() {
        try (BufferedReader br = new BufferedReader(new FileReader(CSV_FILE))) {
            String line;
            boolean isFirstLine = true;

            while ((line = br.readLine()) != null) {
                if (isFirstLine) {
                    isFirstLine = false;
                    continue; // B·ªè qua d√≤ng header
                }

                String[] data = line.split(",");
                if (data.length >= 7) {
                    try {
                        String soThuTu = data[0];
                        String maBenhAn = data[1];
                        String tenBenhNhan = data[2];
                        Date ngayNhapVien = dateFormat.parse(data[3]);
                        Date ngayRaVien = dateFormat.parse(data[4]);
                        String lyDoNhapVien = data[5];
                        String loaiType = data[6];

                        BenhAn benhAn = null;
                        if ("THUONG".equals(loaiType) && data.length >= 8) {
                            double phiNamVien = Double.parseDouble(data[7]);
                            benhAn = new BenhAnThuong(soThuTu, maBenhAn, tenBenhNhan,
                                    ngayNhapVien, ngayRaVien, lyDoNhapVien, phiNamVien);
                        } else if ("VIP".equals(loaiType) && data.length >= 9) {
                            String loaiVIP = data[7];
                            int thoiHanVIP = Integer.parseInt(data[8]);
                            benhAn = new BenhAnVIP(soThuTu, maBenhAn, tenBenhNhan,
                                    ngayNhapVien, ngayRaVien, lyDoNhapVien, loaiVIP, thoiHanVIP);
                        }

                        if (benhAn != null) {
                            danhSachBenhAn.add(benhAn);
                        }
                    } catch (Exception e) {
                        System.out.println("L·ªói ƒë·ªçc d√≤ng: " + line);
                    }
                }
            }
            System.out.println("ƒê√£ ƒë·ªçc " + danhSachBenhAn.size() + " b·ªánh √°n t·ª´ file CSV.");

        } catch (FileNotFoundException e) {
            System.out.println("File CSV ch∆∞a t·ªìn t·∫°i. S·∫Ω t·∫°o m·ªõi khi l∆∞u.");
        } catch (IOException e) {
            System.out.println("L·ªói ƒë·ªçc file CSV: " + e.getMessage());
        }
    }

    // GHI D·ªÆ LI·ªÜU V√ÄO CSV
    private void luuDuLieuVaoCSV() {
        try (PrintWriter pw = new PrintWriter(new FileWriter(CSV_FILE))) {
            // Ghi header
            pw.println("SoThuTu,MaBenhAn,TenBenhNhan,NgayNhapVien,NgayRaVien,LyDoNhapVien,LoaiType,ThongTin1,ThongTin2");

            // Ghi t·ª´ng b·ªánh √°n
            for (BenhAn ba : danhSachBenhAn) {
                StringBuilder sb = new StringBuilder();
                sb.append(ba.getSoThuTu()).append(",");
                sb.append(ba.getMaBenhAn()).append(",");
                sb.append(ba.getTenBenhNhan()).append(",");
                sb.append(dateFormat.format(ba.getNgayNhapVien())).append(",");
                sb.append(dateFormat.format(ba.getNgayRaVien())).append(",");
                sb.append(ba.getLyDoNhapVien()).append(",");

                if (ba instanceof BenhAnThuong) {
                    BenhAnThuong bat = (BenhAnThuong) ba;
                    sb.append("THUONG").append(",");
                    sb.append(bat.getPhiNamVien()).append(",");
                    sb.append(""); // C·ªôt tr·ªëng cho th√¥ng tin VIP
                } else if (ba instanceof BenhAnVIP) {
                    BenhAnVIP bav = (BenhAnVIP) ba;
                    sb.append("VIP").append(",");
                    sb.append(bav.getLoaiVIP()).append(",");
                    sb.append(bav.getThoiHanVIP());
                }

                pw.println(sb.toString());
            }

            System.out.println("ƒê√£ l∆∞u " + danhSachBenhAn.size() + " b·ªánh √°n v√†o file CSV.");

        } catch (IOException e) {
            System.out.println("L·ªói ghi file CSV: " + e.getMessage());
        }
    }

    private void khoiTaoDuLieuMau() {
        try {
            // Th√™m b·ªánh √°n th∆∞·ªùng
            BenhAn ba1 = new BenhAnThuong("001", "BA001", "Nguy·ªÖn VƒÉn A",
                    dateFormat.parse("01/01/2024"),
                    dateFormat.parse("05/01/2024"),
                    "Vi√™m ph·ªïi", 200000);
            // Th√™m b·ªánh √°n VIP
            BenhAn ba2 = new BenhAnVIP("002", "BA002", "Nguy·ªÖn VƒÉn B",
                    dateFormat.parse("02/01/2024"),
                    dateFormat.parse("08/01/2024"),
                    "Ph·∫´u thu·∫≠t tim", "VIP I", 12);

            danhSachBenhAn.add(ba1);
            danhSachBenhAn.add(ba2);

            // L∆∞u d·ªØ li·ªáu m·∫´u v√†o CSV
            luuDuLieuVaoCSV();
        } catch (ParseException e) {
            System.out.println("L·ªói kh·ªüi t·∫°o d·ªØ li·ªáu m·∫´u: " + e.getMessage());
        }
    }

    public void themBenhAn() {
        try {
            System.out.println("\n=== TH√äM B·ªÜNH √ÅN M·ªöI ===");

            System.out.print("Nh·∫≠p s·ªë th·ª© t·ª±: ");
            String soThuTu = scanner.nextLine();

            System.out.print("Nh·∫≠p m√£ b·ªánh √°n: ");
            String maBenhAn = scanner.nextLine();

            System.out.print("Nh·∫≠p t√™n b·ªánh nh√¢n: ");
            String tenBenhNhan = scanner.nextLine();

            System.out.print("Nh·∫≠p ng√†y nh·∫≠p vi·ªán (dd/MM/yyyy): ");
            Date ngayNhapVien = dateFormat.parse(scanner.nextLine());

            System.out.print("Nh·∫≠p ng√†y ra vi·ªán (dd/MM/yyyy): ");
            Date ngayRaVien = dateFormat.parse(scanner.nextLine());

            System.out.print("Nh·∫≠p l√Ω do nh·∫≠p vi·ªán: ");
            String lyDoNhapVien = scanner.nextLine();

            System.out.print("Ch·ªçn lo·∫°i b·ªánh √°n (1-Th∆∞·ªùng, 2-VIP): ");
            int loai = Integer.parseInt(scanner.nextLine());

            BenhAn benhAn = null;
            if (loai == 1) {
                System.out.print("Nh·∫≠p ph√≠ n·∫±m vi·ªán (VND/ng√†y): ");
                double phiNamVien = Double.parseDouble(scanner.nextLine());

                benhAn = new BenhAnThuong(soThuTu, maBenhAn, tenBenhNhan,
                        ngayNhapVien, ngayRaVien, lyDoNhapVien, phiNamVien);
            } else if (loai == 2) {
                System.out.print("Nh·∫≠p lo·∫°i VIP (VIP I/VIP II/VIP III): ");
                String loaiVIP = scanner.nextLine();

                System.out.print("Nh·∫≠p th·ªùi h·∫°n VIP (th√°ng): ");
                int thoiHanVIP = Integer.parseInt(scanner.nextLine());

                benhAn = new BenhAnVIP(soThuTu, maBenhAn, tenBenhNhan,
                        ngayNhapVien, ngayRaVien, lyDoNhapVien, loaiVIP, thoiHanVIP);
            }
            if (benhAn != null) {
                danhSachBenhAn.add(benhAn);

                // T·ª± ƒë·ªông l∆∞u v√†o CSV sau khi th√™m
                luuDuLieuVaoCSV();

                System.out.println("Th√™m b·ªánh √°n th√†nh c√¥ng!");
            }

        } catch (Exception e) {
            System.out.println("L·ªói nh·∫≠p d·ªØ li·ªáu: " + e.getMessage());
        }
    }

    // Hi·ªÉn th·ªã danh s√°ch b·ªánh √°n
    public void hienThiDanhSach() {
        System.out.println("\n=== DANH S√ÅCH B·ªÜNH √ÅN ===");
        if (danhSachBenhAn.isEmpty()) {
            System.out.println("Danh s√°ch tr·ªëng!");
            return;
        }

        for (int i = 0; i < danhSachBenhAn.size(); i++) {
            System.out.println((i + 1) + ". " + danhSachBenhAn.get(i));
        }
    }


    private String repeat(String str, int count) {
        return String.join("", Collections.nCopies(count, str));
    }

    // Menu
    public void menu() {
        int luaChon;
        do {
            System.out.println("\n" + repeat("=", 50));
            System.out.println("   H·ªÜ TH·ªêNG QU·∫¢N L√ù B·ªÜNH VI·ªÜN");
            System.out.println(repeat("=", 50));
            System.out.println("======MENU CH·ª®C NƒÇNG====== ");
            System.out.println(" 1. Th√™m b·ªánh √°n m·ªõi");
            System.out.println(" 2. Xem danh s√°ch b·ªánh √°n");
            System.out.println(" 3. X√≥a b·ªánh √°n");
            System.out.println(" 4. L∆∞u d·ªØ li·ªáu v√†o CSV ");
            System.out.println(" 5. ƒê·ªçc d·ªØ li·ªáu t·ª´ CSV )");
            System.out.println(" 6. Tho√°t ch∆∞∆°ng tr√¨nh ");
            System.out.println(" ");
            System.out.print("üëâ Ch·ªçn ch·ª©c nƒÉng (1-4): ");

            try {
                luaChon = Integer.parseInt(scanner.nextLine());

                switch (luaChon) {
                    case 1:
                        themBenhAn();
                        break;
                    case 2:
                        hienThiDanhSach();
                        break;
                    case 3:
                        xoaBenhAn();
                        break;
                    case 4:
                        luuDuLieuVaoCSV();
                        break;
                    case 5:
                        System.out.println("ƒêang ƒë·ªçc l·∫°i d·ªØ li·ªáu t·ª´ CSV...");
                        danhSachBenhAn.clear();
                        docDuLieuTuCSV();
                        break;
                    case 6:
                        System.out.println("\n" + repeat("=", 50));
                        System.out.println(" C·∫¢M ∆†N B·∫†N ƒê√É S·ª¨ D·ª§NG H·ªÜ TH·ªêNG!");
                        System.out.println(" Ch∆∞∆°ng tr√¨nh k·∫øt th√∫c th√†nh c√¥ng!");
                        System.out.println(repeat("=", 50));
                        break;
                    default:
                        System.out.println(" L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn t·ª´ 1-4.");
                }
            } catch (NumberFormatException e) {
                System.out.println(" Vui l√≤ng nh·∫≠p s·ªë t·ª´ 1-4!");
                luaChon = -1; //ti·∫øp t·ª•c v√≤ng l·∫∑p
            }


        } while (luaChon != 4);
    }

    // X√≥a b·ªánh √°n theo m√£
    public void xoaBenhAn() {
        System.out.println("\n=== X√ìA B·ªÜNH √ÅN ===");
        if (danhSachBenhAn.isEmpty()) {
            System.out.println("Danh s√°ch tr·ªëng, kh√¥ng c√≥ g√¨ ƒë·ªÉ x√≥a!");
            return;
        }

        // Hi·ªÉn th·ªã danh s√°ch hi·ªán t·∫°i
        System.out.println("Danh s√°ch b·ªánh √°n hi·ªán t·∫°i:");
        for (int i = 0; i < danhSachBenhAn.size(); i++) {
            System.out.println((i + 1) + ". " + danhSachBenhAn.get(i));
        }

        System.out.print("\nNh·∫≠p m√£ b·ªánh √°n c·∫ßn x√≥a: ");
        String maXoa = scanner.nextLine();

        boolean daXoa = false;
        for (int i = 0; i < danhSachBenhAn.size(); i++) {
            if (danhSachBenhAn.get(i).getMaBenhAn().equalsIgnoreCase(maXoa)) {
                // X√°c nh·∫≠n tr∆∞·ªõc khi x√≥a
                System.out.println("T√¨m th·∫•y b·ªánh √°n:");
                System.out.println(danhSachBenhAn.get(i));
                System.out.print("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a? (y/n): ");
                String xacNhan = scanner.nextLine();

                if (xacNhan.equalsIgnoreCase("y") || xacNhan.equalsIgnoreCase("yes")) {
                    danhSachBenhAn.remove(i);

                    // T·ª± ƒë·ªông l∆∞u v√†o CSV sau khi x√≥a
                    luuDuLieuVaoCSV();

                    System.out.println("ƒê√£ x√≥a b·ªánh √°n th√†nh c√¥ng!");
                    daXoa = true;
                } else {
                    System.out.println("ƒê√£ h·ªßy thao t√°c x√≥a.");
                }
                break;
            }
        }

        if (!daXoa && !danhSachBenhAn.isEmpty()) {
            System.out.println("Kh√¥ng t√¨m th·∫•y b·ªánh √°n c√≥ m√£: " + maXoa);
        }
    }
}
